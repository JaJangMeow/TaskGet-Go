
import React from "react";
import { Link } from "react-router-dom";
import { createPageUrl } from "@/utils";
import { 
    MapPin, 
    Clock, 
    IndianRupee,
    Calendar,
    AlertTriangle
} from "lucide-react";
import { Badge } from "@/components/ui/badge";
import { format } from "date-fns";
import { motion } from "framer-motion";

const categoryIcons = {
    General: "📋",
    Home: "🏠",
    Office: "🏢",
    Bazar: "🛒",
    Delivery: "🚚",
    Cleaning: "🧹",
    PickUp: "📦"
};

// categoryColors and priorityColors are removed as per the new design

export default function TaskCard({ task, currentUser, viewMode = "list", userLocation }) {
    const isMyTask = currentUser && task.created_by === currentUser.email;
    
    // Safe category handling - support both single category and array of categories
    const getTaskCategory = () => {
        if (Array.isArray(task.categories) && task.categories.length > 0) {
            return task.categories[0]; // Use first category if it's an array
        }
        return task.category || "General"; // Fallback to single category or "General"
    };

    const category = getTaskCategory();
    const isGridView = viewMode === "grid";

    const destinationUrl = isMyTask
        ? createPageUrl(`ManageTask?id=${task.id}`)
        : createPageUrl(`TaskDetail?id=${task.id}`);

    return (
        <motion.div
            layout
            initial={{ opacity: 0, scale: 0.95 }}
            animate={{ opacity: 1, scale: 1 }}
            exit={{ opacity: 0, scale: 0.95 }}
            transition={{ type: "spring", stiffness: 300, damping: 30 }}
            className={`mobile-card flex flex-col ${isGridView ? "p-3" : "p-4"}`}
        >
            {/* Header */}
            <div className="flex items-start justify-between mb-3">
                <div className="flex items-center gap-2">
                    <span className={`${isGridView ? "text-lg" : "text-xl"}`}>
                        {categoryIcons[category] || "📋"}
                    </span>
                    <Badge 
                        variant="secondary" 
                        className="bg-app-grey/50 text-app-midnight text-xs font-medium px-2 py-0.5"
                    >
                        {category}
                    </Badge>
                </div>
                {task.priority === "high" && ( // Only show "high" priority badge now
                    <Badge 
                        variant="outline" 
                        className="text-app-orange bg-app-orange/10 border-app-orange/20 text-xs"
                    >
                        <AlertTriangle className="w-3 h-3 mr-1" />
                        High
                    </Badge>
                )}
                {/* isMyTask badge is removed from here */}
            </div>

            {/* Title */}
            <h3 className={`font-semibold text-app-midnight mb-2 flex-grow ${
                isGridView ? "text-sm line-clamp-2" : "text-base line-clamp-1"
            }`}>
                {task.title}
            </h3>
            
            {!isGridView && (
                <p className="text-app-stone text-sm line-clamp-2 leading-relaxed mb-3">
                    {task.description}
                </p>
            )}

            {/* Details (Payment & Location) */}
            <div className={`flex items-center ${isGridView ? "flex-col items-start gap-2" : "justify-between"} mb-4`}>
                 <div className="flex items-center gap-1.5 bg-green-50 text-green-800 px-2 py-1 rounded-md">
                    <IndianRupee className="w-4 h-4" />
                    <span className="font-bold text-sm">
                        ₹{task.payment_amount || 0}
                    </span>
                </div>
                <div className="flex items-center gap-2 text-xs text-app-stone">
                    <MapPin className="w-3 h-3" />
                    <span className="truncate">
                        {task.formattedDistance || task.location?.substring(0,25) || "N/A"}
                    </span>
                </div>
            </div>

            {/* Footer */}
            <div className="flex items-center justify-between pt-3 border-t border-app-grey">
                <div className="text-app-stone text-xs">
                    {task.created_date ? format(new Date(task.created_date), "MMM d") : ""}
                </div>
                <Link
                    to={destinationUrl}
                    className={`mobile-button text-white rounded-md font-medium ${
                        isGridView ? "px-3 py-1 text-xs" : "px-4 py-2 text-sm"
                    }`}
                >
                    {isMyTask ? 'Manage' : 'View'}
                </Link>
            </div>
        </motion.div>
    );
}
