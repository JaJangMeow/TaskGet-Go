import React from 'react';
import { Badge } from '@/components/ui/badge';
import { Check } from 'lucide-react';

const categories = [
    { id: 'General', name: 'General', icon: '⚡', color: 'bg-gray-100 text-gray-800' },
    { id: 'Home', name: 'Home', icon: '🏠', color: 'bg-blue-100 text-blue-800' },
    { id: 'Office', name: 'Office', icon: '🏢', color: 'bg-purple-100 text-purple-800' },
    { id: 'Bazar', name: 'Bazar', icon: '🛒', color: 'bg-green-100 text-green-800' },
    { id: 'Delivery', name: 'Delivery', icon: '🚚', color: 'bg-orange-100 text-orange-800' },
    { id: 'Cleaning', name: 'Cleaning', icon: '🧽', color: 'bg-pink-100 text-pink-800' },
    { id: 'PickUp', name: 'Pick Up', icon: '📦', color: 'bg-yellow-100 text-yellow-800' }
];

export default function CategorySelector({ selectedCategories = [], onCategoriesChange }) {
    const toggleCategory = (categoryId) => {
        if (selectedCategories.includes(categoryId)) {
            // Remove category
            onCategoriesChange(selectedCategories.filter(id => id !== categoryId));
        } else if (selectedCategories.length < 2) {
            // Add category (max 2)
            onCategoriesChange([...selectedCategories, categoryId]);
        }
    };

    return (
        <div className="space-y-4">
            <div className="flex items-center justify-between">
                <h4 className="text-sm font-medium text-slate-700">
                    Categories ({selectedCategories.length}/2)
                </h4>
                <span className="text-xs text-slate-500">Select up to 2</span>
            </div>

            <div className="grid grid-cols-2 gap-3">
                {categories.map((category) => {
                    const isSelected = selectedCategories.includes(category.id);
                    const isDisabled = !isSelected && selectedCategories.length >= 2;
                    
                    return (
                        <button
                            key={category.id}
                            onClick={() => !isDisabled && toggleCategory(category.id)}
                            disabled={isDisabled}
                            className={`
                                relative p-3 rounded-xl border-2 transition-all duration-200
                                ${isSelected 
                                    ? 'border-blue-500 bg-blue-50' 
                                    : isDisabled 
                                        ? 'border-slate-200 bg-slate-50 opacity-50' 
                                        : 'border-slate-200 bg-white hover:border-blue-300'
                                }
                            `}
                        >
                            <div className="flex flex-col items-center gap-2">
                                <span className="text-2xl">{category.icon}</span>
                                <span className={`text-xs font-medium ${
                                    isSelected ? 'text-blue-700' : 'text-slate-700'
                                }`}>
                                    {category.name}
                                </span>
                            </div>
                            
                            {isSelected && (
                                <div className="absolute -top-2 -right-2 w-6 h-6 bg-blue-500 text-white rounded-full flex items-center justify-center">
                                    <Check className="w-3 h-3" />
                                </div>
                            )}
                        </button>
                    );
                })}
            </div>

            {selectedCategories.length === 0 && (
                <p className="text-xs text-slate-500 text-center">
                    Please select at least one category
                </p>
            )}
        </div>
    );
}