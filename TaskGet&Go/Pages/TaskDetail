import React, { useState } from "react";
import { Task } from "@/entities/Task";
import { User } from "@/entities/User";
import { useNavigate } from "react-router-dom";
import { createPageUrl } from "@/utils";
import TaskForm from "../components/post/TaskForm";
import { CheckCircle } from "lucide-react";

export default function PostTask() {
    const navigate = useNavigate();
    const [isSubmitting, setIsSubmitting] = useState(false);
    const [showSuccess, setShowSuccess] = useState(false);

    const handleSubmit = async (taskData) => {
        setIsSubmitting(true);
        try {
            const user = await User.me();
            await Task.create({
                ...taskData,
                status: "open"
            });
            
            setShowSuccess(true);
            setTimeout(() => {
                navigate(createPageUrl("MyTasks"));
            }, 2000);
        } catch (error) {
            console.error("Error creating task:", error);
            alert("Failed to create task. Please try again.");
        }
        setIsSubmitting(false);
    };

    if (showSuccess) {
        return (
            <div className="text-center py-16">
                <div className="mobile-card p-8">
                    <div className="w-16 h-16 bg-green-500 rounded-full flex items-center justify-center mx-auto mb-6">
                        <CheckCircle className="w-8 h-8 text-white" />
                    </div>
                    <h2 className="text-xl font-bold text-slate-900 mb-4">Task Posted Successfully!</h2>
                    <p className="text-slate-600 mb-6 text-sm">
                        Your task is now live and visible to potential helpers.
                    </p>
                    <div className="animate-pulse text-indigo-600 font-medium">
                        Redirecting to your tasks...
                    </div>
                </div>
            </div>
        );
    }

    return (
        <div className="space-y-6">
            <div className="text-center">
                <div className="inline-flex items-center gap-2 bg-indigo-50 text-indigo-700 px-3 py-1 rounded-full text-sm font-medium mb-3">
                    <div className="w-2 h-2 bg-indigo-500 rounded-full"></div>
                    Post a new task
                </div>
                <h1 className="text-2xl font-bold text-slate-900 mb-2">
                    Need Help?
                </h1>
                <p className="text-slate-600 text-sm">
                    Post your task and connect with skilled helpers
                </p>
            </div>

            <TaskForm onSubmit={handleSubmit} isSubmitting={isSubmitting} />
        </div>
    );
}